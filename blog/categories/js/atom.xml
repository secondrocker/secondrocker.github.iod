<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: js | elephant]]></title>
  <link href="http://secondrocker.github.io/blog/categories/js/atom.xml" rel="self"/>
  <link href="http://secondrocker.github.io/"/>
  <updated>2014-12-17T11:54:22+08:00</updated>
  <id>http://secondrocker.github.io/</id>
  <author>
    <name><![CDATA[Secondrocker]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[coffeescript的=>]]></title>
    <link href="http://secondrocker.github.io/blog/2014/08/27/coffeescriptde-equals-%3E/"/>
    <updated>2014-08-27T16:05:54+08:00</updated>
    <id>http://secondrocker.github.io/blog/2014/08/27/coffeescriptde-equals-></id>
    <content type="html"><![CDATA[<p>瘦箭头 ->用于 function创建
<code>coffeescript
$("#login").click -&gt;
  alert("ca")
</code>
胖箭头=>把 this作为参数代入function
在function中使用this 为外部定义function的this，起到作用域转移的作用
<code>coffeescript
user_id="nidaye"
ele.addEventListener "click",(e)=&gt;
  alert(this.user_id)
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[js闭包]]></title>
    <link href="http://secondrocker.github.io/blog/2014/08/08/jsbi-bao/"/>
    <updated>2014-08-08T10:58:57+08:00</updated>
    <id>http://secondrocker.github.io/blog/2014/08/08/jsbi-bao</id>
    <content type="html"><![CDATA[<p>创建一个对象时如果该对象用到某个内部作用域的变量，那么对这个内部作用域创建一个闭包</p>

<p>eg
<code>javascript
function a(){
  var n=0;
  addN=function(){
    n+=1;
    console.log(n);
  };
  return addN;
}
x=a();     //创建一个闭包
x();       //输出1
x();       //输出2
y=a();     //创建另一个闭包
y();       //输出1
</code></p>
]]></content>
  </entry>
  
</feed>
